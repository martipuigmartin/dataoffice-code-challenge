<?php

declare(strict_types=1);

namespace App\Core\Domain\Entity;

use App\Shared\Domain\Entity\AggregateRoot;

final class Card extends AggregateRoot
{
    use CardGetters;

    private ?int $id = null;
    private ?string $artist;
    private ?array $artistIds;
    private ?string $asciiName;
    private ?array $attractionLights;
    private ?array $availability;
    private ?array $boosterTypes;
    private ?string $borderColor;
    private ?array $cardParts;
    private ?array $colorIdentity;
    private ?array $colorIndicator;
    private ?array $colors;
    private ?float $convertedManaCost;
    private ?string $defense;
    private ?string $duelDeck;
    private ?int $edhrecRank;
    private ?int $edhrecSaltiness;
    private ?float $faceConvertedManaCost;
    private ?string $faceFlavorName;
    private ?int $faceManaValue;
    private ?string $faceName;
    private ?array $finishes;
    private ?string $flavorName;
    private ?string $flavorText;
    private ?array $foreignData;
    private ?array $frameEffects;
    private ?string $frameVersion;
    private ?string $hand;
    private ?bool $hasAlternativeDeckLimit;
    private ?bool $hasContentWarning;
    private ?bool $hasFoil;
    private ?bool $hasNonFoil;
    private ?array $identifiers;
    private ?bool $isAlternative;
    private ?bool $isFullArt;
    private ?bool $isFunny;
    private ?bool $isOnlineOnly;
    private ?bool $isOversized;
    private ?bool $isPromo;
    private ?bool $isRebalanced;
    private ?bool $isReprint;
    private ?bool $isReserved;
    private ?bool $isStarter;
    private ?bool $isStorySpotlight;
    private ?bool $isTextless;
    private ?bool $isTimeshifted;
    private ?array $keywords;
    private ?string $language;
    private ?string $layout;
    private ?array $leadershipSkills;
    private ?array $legalities;
    private ?string $life;
    private ?string $loyalty;
    private ?string $manaCost;
    private ?int $manaValue;
    private ?string $name;
    private ?string $number;
    private ?array $originalPrintings;
    private ?string $originalReleaseDate;
    private ?string $originalText;
    private ?string $originalType;
    private ?array $otherFaceIds;
    private ?string $power;
    private ?array $printings;
    private ?array $promoTypes;
    private ?array $purchaseUrls;
    private ?string $rarity;
    private ?array $relatedCards;
    private ?array $rebalancedPrintings;
    private ?array $rulings;
    private ?string $securityStamp;
    private ?string $setCode;
    private ?string $side;
    private ?string $signature;
    private ?array $sourceProducts;
    private ?array $subsets;
    private ?array $subtypes;
    private ?array $supertypes;
    private ?string $text;
    private ?string $toughness;
    private ?string $type;
    private ?array $types;
    private string $uuid;
    private ?array $variations;
    private ?string $watermark;

    public function __construct(?string $artist, ?array $artistIds, ?string $asciiName, ?array $attractionLights, ?array $availability, ?array $boosterTypes, ?string $borderColor, ?array $cardParts, ?array $colorIdentity, ?array $colorIndicator, ?array $colors, ?float $convertedManaCost, ?string $defense, ?string $duelDeck, ?int $edhrecRank, ?int $edhrecSaltiness, ?float $faceConvertedManaCost, ?string $faceFlavorName, ?int $faceManaValue, ?string $faceName, ?array $finishes, ?string $flavorName, ?string $flavorText, ?array $foreignData, ?array $frameEffects, ?string $frameVersion, ?string $hand, ?bool $hasAlternativeDeckLimit, ?bool $hasContentWarning, ?bool $hasFoil, ?bool $hasNonFoil, ?array $identifiers, ?bool $isAlternative, ?bool $isFullArt, ?bool $isFunny, ?bool $isOnlineOnly, ?bool $isOversized, ?bool $isPromo, ?bool $isRebalanced, ?bool $isReprint, ?bool $isReserved, ?bool $isStarter, ?bool $isStorySpotlight, ?bool $isTextless, ?bool $isTimeshifted, ?array $keywords, ?string $language, ?string $layout, ?array $leadershipSkills, ?array $legalities, ?string $life, ?string $loyalty, ?string $manaCost, ?int $manaValue, ?string $name, ?string $number, ?array $originalPrintings, ?string $originalReleaseDate, ?string $originalText, ?string $originalType, ?array $otherFaceIds, ?string $power, ?array $printings, ?array $promoTypes, ?array $purchaseUrls, ?string $rarity, ?array $relatedCards, ?array $rebalancedPrintings, ?array $rulings, ?string $securityStamp, ?string $setCode, ?string $side, ?string $signature, ?array $sourceProducts, ?array $subsets, ?array $subtypes, ?array $supertypes, ?string $text, ?string $toughness, ?string $type, ?array $types, string $uuid, ?array $variations, ?string $watermark)
    {
        $this->artist = $artist;
        $this->artistIds = $artistIds;
        $this->asciiName = $asciiName;
        $this->attractionLights = $attractionLights;
        $this->availability = $availability;
        $this->boosterTypes = $boosterTypes;
        $this->borderColor = $borderColor;
        $this->cardParts = $cardParts;
        $this->colorIdentity = $colorIdentity;
        $this->colorIndicator = $colorIndicator;
        $this->colors = $colors;
        $this->convertedManaCost = $convertedManaCost;
        $this->defense = $defense;
        $this->duelDeck = $duelDeck;
        $this->edhrecRank = $edhrecRank;
        $this->edhrecSaltiness = $edhrecSaltiness;
        $this->faceConvertedManaCost = $faceConvertedManaCost;
        $this->faceFlavorName = $faceFlavorName;
        $this->faceManaValue = $faceManaValue;
        $this->faceName = $faceName;
        $this->finishes = $finishes;
        $this->flavorName = $flavorName;
        $this->flavorText = $flavorText;
        $this->foreignData = $foreignData;
        $this->frameEffects = $frameEffects;
        $this->frameVersion = $frameVersion;
        $this->hand = $hand;
        $this->hasAlternativeDeckLimit = $hasAlternativeDeckLimit;
        $this->hasContentWarning = $hasContentWarning;
        $this->hasFoil = $hasFoil;
        $this->hasNonFoil = $hasNonFoil;
        $this->identifiers = $identifiers;
        $this->isAlternative = $isAlternative;
        $this->isFullArt = $isFullArt;
        $this->isFunny = $isFunny;
        $this->isOnlineOnly = $isOnlineOnly;
        $this->isOversized = $isOversized;
        $this->isPromo = $isPromo;
        $this->isRebalanced = $isRebalanced;
        $this->isReprint = $isReprint;
        $this->isReserved = $isReserved;
        $this->isStarter = $isStarter;
        $this->isStorySpotlight = $isStorySpotlight;
        $this->isTextless = $isTextless;
        $this->isTimeshifted = $isTimeshifted;
        $this->keywords = $keywords;
        $this->language = $language;
        $this->layout = $layout;
        $this->leadershipSkills = $leadershipSkills;
        $this->legalities = $legalities;
        $this->life = $life;
        $this->loyalty = $loyalty;
        $this->manaCost = $manaCost;
        $this->manaValue = $manaValue;
        $this->name = $name;
        $this->number = $number;
        $this->originalPrintings = $originalPrintings;
        $this->originalReleaseDate = $originalReleaseDate;
        $this->originalText = $originalText;
        $this->originalType = $originalType;
        $this->otherFaceIds = $otherFaceIds;
        $this->power = $power;
        $this->printings = $printings;
        $this->promoTypes = $promoTypes;
        $this->purchaseUrls = $purchaseUrls;
        $this->rarity = $rarity;
        $this->relatedCards = $relatedCards;
        $this->rebalancedPrintings = $rebalancedPrintings;
        $this->rulings = $rulings;
        $this->securityStamp = $securityStamp;
        $this->setCode = $setCode;
        $this->side = $side;
        $this->signature = $signature;
        $this->sourceProducts = $sourceProducts;
        $this->subsets = $subsets;
        $this->subtypes = $subtypes;
        $this->supertypes = $supertypes;
        $this->text = $text;
        $this->toughness = $toughness;
        $this->type = $type;
        $this->types = $types;
        $this->uuid = $uuid;
        $this->variations = $variations;
        $this->watermark = $watermark;
    }

    public function update(string $text): void
    {
        $this->text = $text;
    }
}
